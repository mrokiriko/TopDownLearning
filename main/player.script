local speed = 150
go.property("swinging", false)

function init(self)
	msg.post(".", "acquire_input_focus")
	self.dir = vmath.vector3()
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	if vmath.length_sqr(self.dir) > 1 then                   -- [1]
		self.dir = vmath.normalize(self.dir)
	end
	local p = go.get_position()                              -- [2]
	go.set_position(p + self.dir * speed * dt)               -- [3]
	self.dir = vmath.vector3()                               -- [4]
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed

	-- print("what?")
	-- print("message_id: " .. message_id)
	-- print("message: " .. message)
	-- print("sender: " .. sender)
	
	if message_id == hash("animation_done") then
		msg.post("#sword", "play_animation", { id = hash("sword-idle") })
		self.swinging = false
	end

end

function on_input(self, action_id, action)
	if action_id == hash("down") then
		self.dir.y = -1
	elseif action_id == hash("up") then
		self.dir.y = 1
	elseif action_id == hash("left") then
		self.dir.x = -1
	elseif action_id == hash("right") then
		self.dir.x = 1
	elseif action_id == hash("space") and action.pressed then
		print("swing it")
		self.swinging = true
		msg.post("#sword", "play_animation", { id = hash("sword-swing") })
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
